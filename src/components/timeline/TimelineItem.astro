---
import type { TimelineInterface } from "@/types/Timeline";
import TimelineButton from "./TimelineButton.astro";
import type { Lang } from "@/i18n/utils";

interface Props extends TimelineInterface {
    lang: Lang;
}

const { title, description, date, buttons, lang } = Astro.props;

const options: Intl.DateTimeFormatOptions = {
    month: "long",
    year: "numeric",
};

const capitalize = (value: string) => {
    return value.charAt(0).toUpperCase() + value.slice(1);
};

const formatTimelineDate = (date?: Date) => {
    if (date) {
        const dateFormatted = date.toLocaleDateString(lang, options);
        return capitalize(dateFormatted);
    }
    if (lang === "es") {
        return "Presente";
    }
    return "Present";
};
---

<li class="mb-10 ms-4">
    <div
        class="absolute w-3 h-3 bg-sky-500 rounded-full mt-1.5 -start-1.5 border border-white dark:border-gray-900 dark:bg-gray-700"
    >
    </div>
    <time
        class="mb-1 text-sm font-normal leading-none text-[#55585e] dark:text-gray-500"
        >{formatTimelineDate(date.from)} â€” {formatTimelineDate(date.to)}</time
    >
    <h3 class="text-lg font-semibold text-gray-900 dark:text-white">
        {title}
    </h3>
    {
        description && description[lang] && (
            <p class="text-base font-normal text-gray-500 dark:text-gray-400">
                {description[lang]}
            </p>
        )
    }

    <div class="space-x-3 mt-4">
        {buttons && buttons.map((button) => <TimelineButton {...button} />)}
    </div>
</li>
